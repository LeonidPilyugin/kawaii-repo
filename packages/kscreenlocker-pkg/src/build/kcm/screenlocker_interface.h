/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -p screenlocker_interface /home/leonid/github.com/LeonidPilyugin/kawaii-repo/packages/kscreenlocker-pkg/src/kscreenlocker-5.25.4/dbus/org.kde.screensaver.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef SCREENLOCKER_INTERFACE_H
#define SCREENLOCKER_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.screensaver
 */
class OrgKdeScreensaverInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.screensaver"; }

public:
    OrgKdeScreensaverInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgKdeScreensaverInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> SwitchUser()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("SwitchUser"), argumentList);
    }

    inline QDBusPendingReply<> configure()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("configure"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void AboutToLock();
};

namespace org {
  namespace kde {
    typedef ::OrgKdeScreensaverInterface screensaver;
  }
}
#endif
