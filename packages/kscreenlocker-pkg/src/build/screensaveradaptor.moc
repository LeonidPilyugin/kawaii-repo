/****************************************************************************
** Meta object code from reading C++ file 'screensaveradaptor.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.5)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include "screensaveradaptor.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'screensaveradaptor.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.5. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_ScreenSaverAdaptor_t {
    QByteArrayData data[22];
    char stringdata0[1648];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ScreenSaverAdaptor_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ScreenSaverAdaptor_t qt_meta_stringdata_ScreenSaverAdaptor = {
    {
QT_MOC_LITERAL(0, 0, 18), // "ScreenSaverAdaptor"
QT_MOC_LITERAL(1, 19, 15), // "D-Bus Interface"
QT_MOC_LITERAL(2, 35, 27), // "org.freedesktop.ScreenSaver"
QT_MOC_LITERAL(3, 63, 19), // "D-Bus Introspection"
QT_MOC_LITERAL(4, 83, 1383), // "  <interface name=\"org.freed..."
QT_MOC_LITERAL(5, 1331, 13), // "ActiveChanged"
QT_MOC_LITERAL(6, 1345, 0), // ""
QT_MOC_LITERAL(7, 1346, 3), // "in0"
QT_MOC_LITERAL(8, 1350, 9), // "GetActive"
QT_MOC_LITERAL(9, 1360, 13), // "GetActiveTime"
QT_MOC_LITERAL(10, 1374, 18), // "GetSessionIdleTime"
QT_MOC_LITERAL(11, 1393, 7), // "Inhibit"
QT_MOC_LITERAL(12, 1401, 16), // "application_name"
QT_MOC_LITERAL(13, 1418, 18), // "reason_for_inhibit"
QT_MOC_LITERAL(14, 1437, 4), // "Lock"
QT_MOC_LITERAL(15, 1442, 9), // "SetActive"
QT_MOC_LITERAL(16, 1452, 1), // "e"
QT_MOC_LITERAL(17, 1454, 20), // "SimulateUserActivity"
QT_MOC_LITERAL(18, 1475, 8), // "Throttle"
QT_MOC_LITERAL(19, 1484, 9), // "UnInhibit"
QT_MOC_LITERAL(20, 1494, 6), // "cookie"
QT_MOC_LITERAL(21, 1501, 10) // "UnThrottle"

    },
    "ScreenSaverAdaptor\0D-Bus Interface\0"
    "org.freedesktop.ScreenSaver\0"
    "D-Bus Introspection\0"
    "  <interface name=\"org.freedesktop.ScreenSaver\">\n    <signal name=\""
    "ActiveChanged\">\n      <arg type=\"b\"/>\n    </signal>\n    <method "
    "name=\"Lock\"/>\n    <method name=\"SimulateUserActivity\"/>\n    <met"
    "hod name=\"GetActive\">\n      <arg direction=\"out\" type=\"b\"/>\n  "
    "  </method>\n    <method name=\"GetActiveTime\">\n      <arg direction"
    "=\"out\" type=\"u\" name=\"seconds\"/>\n    </method>\n    <method nam"
    "e=\"GetSessionIdleTime\">\n      <arg direction=\"out\" type=\"u\" nam"
    "e=\"seconds\"/>\n    </method>\n    <method name=\"SetActive\">\n     "
    " <arg direction=\"out\" type=\"b\"/>\n      <arg direction=\"in\" type"
    "=\"b\" name=\"e\"/>\n    </method>\n    <method name=\"Inhibit\">\n   "
    "   <arg direction=\"in\" type=\"s\" name=\"application_name\"/>\n     "
    " <arg direction=\"in\" type=\"s\" name=\"reason_for_inhibit\"/>\n     "
    " <arg direction=\"out\" type=\"u\" name=\"cookie\"/>\n    </method>\n "
    "   <method name=\"UnInhibit\">\n      <arg direction=\"in\" type=\"u\""
    " name=\"cookie\"/>\n    </method>\n    <method name=\"Throttle\">\n   "
    "   <arg direction=\"in\" type=\"s\" name=\"application_name\"/>\n     "
    " <arg direction=\"in\" type=\"s\" name=\"reason_for_inhibit\"/>\n     "
    " <arg direction=\"out\" type=\"u\" name=\"cookie\"/>\n    </method>\n "
    "   <method name=\"UnThrottle\">\n      <arg direction=\"in\" type=\"u\""
    " name=\"cookie\"/>\n    </method>\n  </interface>\n\0"
    "ActiveChanged\0\0in0\0GetActive\0GetActiveTime\0"
    "GetSessionIdleTime\0Inhibit\0application_name\0"
    "reason_for_inhibit\0Lock\0SetActive\0e\0"
    "SimulateUserActivity\0Throttle\0UnInhibit\0"
    "cookie\0UnThrottle"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ScreenSaverAdaptor[] = {

 // content:
       8,       // revision
       0,       // classname
       2,   14, // classinfo
      11,   18, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // classinfo: key, value
       1,    2,
       3,    4,

 // signals: name, argc, parameters, tag, flags
       5,    1,   73,    6, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       8,    0,   76,    6, 0x0a /* Public */,
       9,    0,   77,    6, 0x0a /* Public */,
      10,    0,   78,    6, 0x0a /* Public */,
      11,    2,   79,    6, 0x0a /* Public */,
      14,    0,   84,    6, 0x0a /* Public */,
      15,    1,   85,    6, 0x0a /* Public */,
      17,    0,   88,    6, 0x0a /* Public */,
      18,    2,   89,    6, 0x0a /* Public */,
      19,    1,   94,    6, 0x0a /* Public */,
      21,    1,   97,    6, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::Bool,    7,

 // slots: parameters
    QMetaType::Bool,
    QMetaType::UInt,
    QMetaType::UInt,
    QMetaType::UInt, QMetaType::QString, QMetaType::QString,   12,   13,
    QMetaType::Void,
    QMetaType::Bool, QMetaType::Bool,   16,
    QMetaType::Void,
    QMetaType::UInt, QMetaType::QString, QMetaType::QString,   12,   13,
    QMetaType::Void, QMetaType::UInt,   20,
    QMetaType::Void, QMetaType::UInt,   20,

       0        // eod
};

void ScreenSaverAdaptor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ScreenSaverAdaptor *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->ActiveChanged((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 1: { bool _r = _t->GetActive();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = std::move(_r); }  break;
        case 2: { uint _r = _t->GetActiveTime();
            if (_a[0]) *reinterpret_cast< uint*>(_a[0]) = std::move(_r); }  break;
        case 3: { uint _r = _t->GetSessionIdleTime();
            if (_a[0]) *reinterpret_cast< uint*>(_a[0]) = std::move(_r); }  break;
        case 4: { uint _r = _t->Inhibit((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< uint*>(_a[0]) = std::move(_r); }  break;
        case 5: _t->Lock(); break;
        case 6: { bool _r = _t->SetActive((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = std::move(_r); }  break;
        case 7: _t->SimulateUserActivity(); break;
        case 8: { uint _r = _t->Throttle((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< uint*>(_a[0]) = std::move(_r); }  break;
        case 9: _t->UnInhibit((*reinterpret_cast< uint(*)>(_a[1]))); break;
        case 10: _t->UnThrottle((*reinterpret_cast< uint(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (ScreenSaverAdaptor::*)(bool );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ScreenSaverAdaptor::ActiveChanged)) {
                *result = 0;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject ScreenSaverAdaptor::staticMetaObject = { {
    QMetaObject::SuperData::link<QDBusAbstractAdaptor::staticMetaObject>(),
    qt_meta_stringdata_ScreenSaverAdaptor.data,
    qt_meta_data_ScreenSaverAdaptor,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *ScreenSaverAdaptor::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ScreenSaverAdaptor::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ScreenSaverAdaptor.stringdata0))
        return static_cast<void*>(this);
    return QDBusAbstractAdaptor::qt_metacast(_clname);
}

int ScreenSaverAdaptor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractAdaptor::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 11)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 11;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 11)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 11;
    }
    return _id;
}

// SIGNAL 0
void ScreenSaverAdaptor::ActiveChanged(bool _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
